spring:
  application:
    name: shared-module

# Common properties
common:
  api:
    version: 2.0.0
    title: Banking API
    description: API for banking microservices
    terms-of-service: http://example.com/terms
    contact:
      name: Banking Team
      url: http://example.com
      email: support@example.com
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html

# Security configurations
#security:
#  jwt:
#    secret: your-jwt-secret-key
#    expiration: 86400 # 24 hours in seconds
#    header: Authorization
#    token-prefix: Bearer
#    enabled: true

# API documentation
springdoc:
  api-docs:
    enabled: true
    path: /
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config:
      doc-expansion: list
      deep-linking: true
      display-operation-id: true
      default-models-expand-depth: 1
      default-model-rendering: example
      display-request-duration: true
      layout: BaseLayout
      show extensions: true
      syntax-highlight:
        enabled: true
        theme: monokai

# Logging configurations
logging:
  level:
    org.springframework: INFO
    com.banking: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/shared-module.log
  max-history: 7
  max-size: 10MB

# Kafka configurations
kafka:
  bootstrap-servers: localhost:9092
  consumer:
    group-id: banking-group
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: org.apache.kafka.common.serialization.StringSerializer

# Database configurations
datasource:
  url: jdbc:mysql://localhost:3306/banking_shared?useSSL=false&serverTimezone=UTC
  username: root
  password: root
  driver-class-name: com.mysql.cj.jdbc.Driver
  hikari:
    maximum-pool-size: 10
    minimum-idle: 5
    connection-timeout: 30000

# JPA/Hibernate configurations
jpa:
  hibernate:
    ddl-auto: update
  properties:
    hibernate:
      dialect: org.hibernate.dialect.MySQL8Dialect
      format_sql: true
      show_sql: true
  generate-ddl: true

# Eureka service discovery
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

# Other configurations
server:
  port: 5643 # Use random port for shared module

# Message conversion
  mvc:
    throw-exception-if-no-handler-found: true
  resources:
    add-mappings: false

# Actuator configurations
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: false
  metrics:
    export:
      prometheus:
        enabled: true